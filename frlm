#! /bin/bash

#============================================================================================================
#           Twitter:      https://twitter.com/mahamdi.amine
#           Github :      https://github.com/MahamdiAmine
#           Website:      https://mahamdiamine.github.io/
#============================================================================================================
yellow='\e[1;33m'
green='\e[0;34m'
BlueF='\e[1;34m'
Red="\e[1;31m"
Cclear="\e[0m"
dir=`pwd`
lilaPath="/home/mahamdi/development/lila/"
lilaCmd="/home/mahamdi/development/lila/bin/dev run"
BUS=/sys/bus/usb/drivers_autoprobe
USER=mahamdi
arg=$1

echo 0 > $BUS #protect usb access
clear
#######################################################################################
bar ()
{
	echo -n  Initialisation = =;
	sleep 3 & while [ "$(ps a | awk '{print $1}' | grep $!)" ] ; do for X in '-' '\' '|' '/'; do echo -en "\b$X"; sleep 0.1; done; done
  echo
	echo
BAR='█║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║║█'

for i in {1..50}; do
    echo -ne "\r             ${BAR:0:$i}"
    sleep 0.04
done
}
################################# < Super User Check > ################################
if [ "$#" != "1" ]; then
	echo -e "${Red}       illegal number of parameters.$Cclear"
	echo
	exit 1
fi
################################### < XTerm Checks > ###################################
if [ ! "${DISPLAY:-}" ]; then
    echo -e "${CRed}The script should be exected inside a X (graphical) session.$CClr"
		echo
		exit 2
fi
########################################################################################
if [ " $arg " = ' init ' ] ; then
echo
#echo -e $yellow"  [*] Initialisation ..."
echo -e $BlueF""
sudo service network-manager stop;
sudo ifconfig wlan0 down
sudo macchanger -r wlan0 > /dev/null
sudo macchanger -r eth0 > /dev/null
sudo service network-manager start;
sudo ifconfig wlan0 up
echo -e $Cclear
bar
echo
echo
echo -e $yellow"  [*] Done ."
sleep 1
echo -e $Cclear
clear
elif
[ " $arg " = ' ghoston ' ] ; then
echo -e $yellow "   Becaming ghost in the net ..."
sudo	sh /home/mahamdi/LINUX/scripts/GhostInTheNet/GhostInTheNet.sh on wlan0 > /dev/null ;
  sh /home/mahamdi/LINUX/scripts/GhostInTheNet/GhostInTheNet.sh on eth0 > /dev/null;
echo -e $yellow"  [*] Done ."
sleep 1
elif
[ " $arg " = ' ghostoff ' ] ; then
echo -e $yellow "   turning off the mode  ghost in the net ..."
  sh /home/mahamdi/LINUX/scripts/GhostInTheNet/GhostInTheNet.sh off wlan0 ;
  sh /home/mahamdi/LINUX/scripts/GhostInTheNet/GhostInTheNet.sh off eth0 ;
echo -e $yellow"  [*] Done ."
sleep 1
elif
[ " $arg " = ' kick ' ] ; then
	python3 /home/mahamdi/development/kickthemout/kickthemout.py
elif
[ " $arg " = ' ssh ' ] ; then
	eval "$(ssh-agent -s)"
elif
[ " $arg " = ' wifi ' ] ; then
	nmcli dev wifi hotspot ifname wlan0 ssid ' Untrusted Network ' password "streetdog05"
echo -e $yellow "     Done."
elif
[ " $arg " = ' kill ' ] ; then
	echo -e $yellow "   starting wifijammer ... "
	python /home/mahamdi/LINUX/scripts/wifijammer/wifijammer.py
	sleep 1
elif
[ " $arg " = ' chess ' ] ; then
	sudo -u $USER /home/mahamdi/aminov-tools/lichess.sh
 #cd /home/mahamdi/lila/
 # sudo systemctl start nginx.service
 # echo -e $yellow"  [*] service nginx up "
 # sudo systemctl start mongodb.service
 # echo -e $yellow"  [*] service mongodb up "
 #cd $lilaPath
 #$lilaCmd > /dev/null &
 #google-chrome 127.0.0.1:9663 > /dev/null &
# cd /home/mahamdi/development/lila/
elif
[ " $arg " = ' open-dir ' ] ; then
	dir=`pwd`
	sudo -u $USER nautilus --browser $dir &
elif
[ " $arg " = ' open ' ] ; then
		sudo -u $USER /home/mahamdi/aminov-tools/open-sites.sh
elif
[ " $arg " = ' fix ' ] ; then
	echo -e $yellow "Are you sure ? remember last time "
	  rm /var/lib/dpkg/lock
	  dpkg --configure -a
	  rm /var/lib/apt/lists/lock
	  rm /var/cache/apt/archives/lock
 elif
 [ " $arg " = ' update ' ] ; then
 apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade
elif
[ " $arg " = ' piano ' ] ; then
#sudo cargo build --release > /dev/null &
/home/mahamdi/piano-rs/target/release/piano-rs > /dev/null
#cd dir
elif
[ " $arg " = ' jmerise ' ] ; then
java -jar /opt/JMerise/JMerise.jar > /dev/null &
elif
[ " $arg " = ' packet ' ] ; then
cd /opt/PacketTrace/bin/
./PacketTracer7 > /dev/null &
cd dir
elif
[ " $arg " = ' anonyme ' ] ; then
	python /home/mahamdi/LINUX/scripts/anonymeMail.py
elif
[ " $arg " = ' temp ' ] ; then
	watch sensors ;
elif
[ " $arg " = ' inlightme ' ] ; then
	sudo echo 1 > /sys/devices/platform/sony-laptop/kbd_backlight ;
elif
[ " $arg " = ' vega ' ] ; then
	sudo /home/mahamdi/LINUX/chess/vegalinux64/Vega8 &
elif
[ " $arg " = ' play ' ] ; then
 sudo -u $USER term2048
elif
[ " $arg " = ' darkme ' ] ; then
	sudo echo -1 > /sys/devices/platform/sony-laptop/kbd_backlight ;
elif
[ " $arg " = ' usb ' ] ; then
echo
echo -e $yellow '!!! USB OPENED FOR 10 SECONDS !!!'
echo 1 > $BUS
sleep 20
echo 1 > $BUS
clear
echo
echo -e $Red '!!! USB BLOCKED !!!'
echo
elif
[ " $arg " = ' battery ' ] ; then
upower -i `upower -e | grep 'BAT'`
acpi -V
elif
[ " $arg " = ' convert-dir ' ] ; then
echo -e
echo -e
echo -e $yellow 'Convert a directory :'$Cclear
echo -e
read -p "Enter the full path: " fullpath
read -p "Convert From: " from
read -p "Convert To: " to
echo -e "Please confirm :"
echo -e
echo -e " Converting all $from files to $to files in $fullpath directory ?"
echo -e
read -p "Continue? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1
sleep 1.5
clear
echo
echo
echo -e $green"   Converting .."$Cclear
echo
find $fullpath -type f -name *.$from -not -empty -print0 |
	sudo -u $USER parallel -0 -j -1 ffmpeg -loglevel fatal -i {} {.}.$to
echo -e $yellow "     Done."
elif
[ " $arg " = ' edit ' ] ; then
	sudo atom  /usr/local/bin/frlm
elif
[ " $arg " = ' proxyon ' ] ; then
echo -e $Red "You do not need this anymore "$Cclear
# cat << "EOF" > /etc/apt/apt.conf
# Acquire::http::proxy "http://10.0.0.3:80/";
# Acquire::ftp::proxy "ftp:http://10.0.0.3:80/";
# Acquire::https::proxy "http://10.0.0.3:80/";
# EOF
elif
[ " $arg " = ' proxyoff ' ] ; then
	echo -e $Red "You do not need this anymore "$Cclear
# cat << "EOF" > /etc/apt/apt.conf
# EOF
elif [ " $arg " = ' -h ' ] || [ " $arg " = ' --help ' ]; then
		echo ""
	  echo -e $green" Usage :  sudo frlm args"$Cclear
		echo ""
		echo -e $yellow"[ Args :]"$Cclear
		echo ""
		echo " init = Initialisation , changing the MAC @ "
		echo ""
		echo " ghoston = Becaming ghost in the networking   "
		echo ""
		echo " ghostoff = Turn off ghoston mode  "
		echo ""
		echo " kick = Kick them out of the network  "
		echo ""
		echo " kill = Disconnect all hosts from all access point in your range "
		echo ""
		echo " wifi = Start a Hotspot point"
		echo ""
		echo " chess = Start lichess in localhost "
		echo ""
		echo " open-dir = Open working directory in nautilus "
		echo ""
		echo " open = Start google chrome with usual websites"
		echo ""
		echo " fix = Fix “Unable to lock the administration directory (/var/lib/dpkg/)“ "
		echo ""
		echo " update = Update the system "
		echo ""
		echo " piano = Open piano-rs in the terminal "
		echo ""
		echo " jmerise = old stuffs "
		echo ""
		echo " packet = Open PacketTracer7 (old stuffs) "
		echo ""
		echo " proxyon = Use ESI's proxy in your Linux system "
		echo ""
		echo " proxyoff = Turn off the proxy "
		echo ""
		echo " anonyme = Send an anonymous mail"
		echo ""
		echo " temp = Watch the temp in C° "
		echo ""
		echo " play = Play term2048 in the terminal"
		echo ""
		echo " vega =Swiss Manager tool for CHESS "
		echo ""
		echo " usb = Open your USB ports (sec option) "
		echo ""
		echo " convert-dir = Convert all media files in directory "
		echo ""
		echo " edit = Edit this script in Atom "
		echo ""
		echo " ssh = start the SSH agent "
		echo ""
else
	echo -e $green " use  frlm -h for help "
fi
